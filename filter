function FilterReacts() {
    var ths = this;
    var trs = null;
    this.create_tag = function (tag_name, text_into_tag, parent_elem, class_name) {
        var tag = document.createElement(tag_name);
        tag.className = class_name;
        tag.innerHTML = text_into_tag;
        return parent_elem.appendChild(tag);
    };

    this.filter_input_init = function(filter_input) {
      add_eventer(filter_input, "keydown", function (event) {
        if (event.keyCode==13) { //если enter нажат
            //event.preventDefault();//запрет на дальнейшее распространение
            ths.filter(filter_input.value);
            if (filter_input.value){
                ths.create_tag('div', filter_input.value, document.getElementById('tags'), "tag_style");
            }
            //editReacts.update_current_table(table_place);
            return false;
        }
      });
    };
    this.filter = function(value) {
        var val = value.trim(); //trim возвращает исходную строку с удаленными начальными и конечными пробелами и символами конца строки.
        reg = new RegExp(value, "g", "i");
        if (trs === null) {
            trs = $('#table_place tr');
            console.log('__before if !val '+!val);
            if (val) {
                console.log('__val '+val);
                for (var k = 1; k < trs.length; k++) {
                    tableShower.hideElement(trs[k]);
                    for (var i = 0; i < trs[k].childNodes.length; i++) {
                        tds = trs[k].childNodes;
                        if (tds[i].textContent.match(reg) !== null) {
                            tableShower.showElement(trs[k]);
                            continue;
                        }
                    }
                    tableShower.showElement(trs[0]);
                }
            } else {
                console.log('__!val '+!val);
                for (k = 0; k < trs.length; k++) {
                    tableShower.showElement(trs[k]);
                }
            }
        }
    }
}
